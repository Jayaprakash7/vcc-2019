{"version":3,"sources":["sportsday.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","paper","flexGrow","width","marginTop","spacing","overflowX","textAlign","text","secondary","table","Boolean","window","location","hostname","match","ReactDOM","render","classes","useTheme","useState","setValue","firstBattingList","setFirstBattingList","firstBowlingList","setFirstBowlingList","secondBattingList","setSecondBattingList","secondBowlingList","setSecondBowlingList","firstTeamName","setFirstTeamName","secondTeamName","setSecondTeamName","firstTeamTotalRun","setFirstTotalRun","secondTeamTotalRun","setSecondTeamTotalRun","firstTeamTotalOver","setFirstTeamTotalOver","secondTeamTotalOver","setSecondTeamTotalOver","firstTeamWicket","setFirstTeamWicket","secondTeamWicket","setSecondTeamWicket","useEffect","fetch","then","results","json","data","rows","firstbatting","secondbatting","catch","error","console","log","length","runs","w","balls","toFixed","Fragment","CssBaseline","Container","maxWidth","style","height","className","Grid","container","item","xs","src","require","alt","Paper","variant","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab","label","axis","direction","onChangeIndex","dir","Table","TableHead","align","TableBody","map","row","key","batsman","scope","fours","sixes","name","o","m","r","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45445314.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sportsday.8f6da69e.png\";","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    flexGrow: 1,\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  paper: {\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  table: {\n    width: \"100%\"\n  }\n}));\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n  const [firstBattingList, setFirstBattingList] = useState([]);\n  const [firstBowlingList, setFirstBowlingList] = useState([]);\n  const [secondBattingList, setSecondBattingList] = useState([]);\n  const [secondBowlingList, setSecondBowlingList] = useState([]);\n  const [firstTeamName, setFirstTeamName] = useState(\"\");\n  const [secondTeamName, setSecondTeamName] = useState(\"\");\n  const [firstTeamTotalRun, setFirstTotalRun] = useState(\"\");\n  const [secondTeamTotalRun, setSecondTeamTotalRun] = useState(\"\");\n  const [firstTeamTotalOver, setFirstTeamTotalOver] = useState(\"\");\n  const [secondTeamTotalOver, setSecondTeamTotalOver] = useState(\"\");\n  const [firstTeamWicket, setFirstTeamWicket] = useState(\"\");\n  const [secondTeamWicket, setSecondTeamWicket] = useState(\"\");\n\n  useEffect(() => {\n    matchesWith();\n    firstBatting();\n    firstBowling();\n    secondBatting();\n    secondBowling();\n  }, [firstBattingList]);\n  function matchesWith() {\n    fetch(\n      \"http://gsx2json.com/api?id=1FwsWe-oTm9lM4Xm0KAOTuiEV07H4NKK9n3lCfZ9F85c&sheet=5&columns=false\"\n    )\n      .then(results => results.json())\n      .then(data => {\n        setFirstTeamName(data.rows[0].firstbatting);\n        setSecondTeamName(data.rows[0].secondbatting);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  function firstBatting() {\n    fetch(\n      \"http://gsx2json.com/api?id=1FwsWe-oTm9lM4Xm0KAOTuiEV07H4NKK9n3lCfZ9F85c&sheet=1&columns=false\"\n    )\n      .then(results => results.json())\n      .then(data => {\n        setFirstBattingList(data.rows);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  function firstBowling() {\n    fetch(\n      \"http://gsx2json.com/api?id=1FwsWe-oTm9lM4Xm0KAOTuiEV07H4NKK9n3lCfZ9F85c&sheet=2&columns=false\"\n    )\n      .then(results => results.json())\n      .then(data => {\n        setFirstBowlingList(data.rows);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  function secondBatting() {\n    fetch(\n      \"http://gsx2json.com/api?id=1FwsWe-oTm9lM4Xm0KAOTuiEV07H4NKK9n3lCfZ9F85c&sheet=3&columns=false\"\n    )\n      .then(results => results.json())\n      .then(data => {\n        setSecondBattingList(data.rows);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  function secondBowling() {\n    fetch(\n      \"http://gsx2json.com/api?id=1FwsWe-oTm9lM4Xm0KAOTuiEV07H4NKK9n3lCfZ9F85c&sheet=4&columns=false\"\n    )\n      .then(results => results.json())\n      .then(data => {\n        setSecondBowlingList(data.rows);\n        setFirstTotalRun(firstBattingList[firstBattingList.length - 1].runs);\n        setSecondTeamTotalRun(\n          secondBattingList[secondBattingList.length - 1].runs\n        );\n        setFirstTeamWicket(firstBowlingList[firstBowlingList.length - 1].w);\n        setSecondTeamWicket(secondBowlingList[secondBowlingList.length - 1].w);\n        setFirstTeamTotalOver(\n          (firstBattingList[firstBattingList.length - 1].balls / 6).toFixed(1)\n        );\n        setSecondTeamTotalOver(\n          (secondBattingList[secondBattingList.length - 1].balls / 6).toFixed(1)\n        );\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Typography\n          component=\"div\"\n          style={{ backgroundColor: \"#cfe8fc\", height: \"100vh\" }}\n        >\n          <div className={classes.root}>\n            <div className={classes.root}>\n              <Grid container spacing={0}>\n                <Grid item xs={12}>\n                  <marquee>\n                    <Typography style={{ color: \"black\", fontSize: 18 }}>\n                      <span>&#127878;&#127878;</span> Wishes you a very happy diwali\n                      <span>&#127878;&#127878;</span>, Please like and share our\n                      facebook and Instagram page வெடியங்காடு ஊர் சொந்தங்கள்<span>&#128512;</span>{\" \"}சும்மா ஒரு விளம்பரம்\n                      <span>&#128540;&#128694;</span>\n                    </Typography>\n                  </marquee>\n                </Grid>\n              </Grid>\n            </div>\n\n            <Grid container spacing={0}>\n              {/* <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <Typography variant=\"h4\" style={{ color: \"#000\" }}>\n                    VPL - 2019\n                  </Typography>\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <Typography variant=\"h6\">\n                    Vediyangadu Diwali Tournament\n                  </Typography>\n                </Paper>\n              </Grid> */}\n              <Grid item xs={12}>\n                <img\n                  style={{ width: \"100%\" }}\n                  src={require(\"./sportsday.png\")}\n                  alt=\"Vediyangadu Diwali Tournament \"\n                ></img>\n              </Grid>\n\n              <div className={classes.root}>\n                <Grid container spacing={0}>\n                  <Grid item xs={6}>\n                    <Paper className={classes.paper}>\n                      <Typography variant=\"h6\" style={{ color: \"000\" }}>\n                        {firstTeamName}\n                      </Typography>\n                      <Typography>\n                        {firstTeamTotalRun + \"/\" + firstTeamWicket}\n                      </Typography>\n                      <Typography>{\"(\" + firstTeamTotalOver + \")\"}</Typography>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Paper className={classes.paper}>\n                      <Typography variant=\"h6\" style={{ color: \"000\" }}>\n                        {secondTeamName}\n                      </Typography>\n                      <Typography>\n                        {secondTeamTotalRun + \"/\" + secondTeamWicket}\n                      </Typography>\n                      <Typography>{\"(\" + secondTeamTotalOver + \")\"}</Typography>\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div className={classes.root}>\n                <AppBar position=\"static\" color=\"default\">\n                  <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                  >\n                    <Tab label={firstTeamName} {...a11yProps(0)} />\n                    <Tab label={secondTeamName} {...a11yProps(1)} />\n                  </Tabs>\n                </AppBar>\n                <SwipeableViews\n                  axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n                  index={value}\n                  onChangeIndex={handleChangeIndex}\n                >\n                  <TabPanel value={value} index={0} dir={theme.direction}>\n                    <Paper className={classes.root}>\n                      <Table\n                        className={classes.table}\n                        aria-label=\"customized table\"\n                      >\n                        <TableHead>\n                          <TableRow>\n                            <StyledTableCell>BATTING</StyledTableCell>\n                            <StyledTableCell align=\"right\">R</StyledTableCell>\n                            <StyledTableCell align=\"right\">B</StyledTableCell>\n                            <StyledTableCell align=\"right\">4s</StyledTableCell>\n                            <StyledTableCell align=\"right\">6s</StyledTableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {firstBattingList.map(row => (\n                            <StyledTableRow key={row.batsman}>\n                              <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.batsman}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">\n                                {row.runs}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">\n                                {row.balls}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">\n                                {row.fours}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">\n                                {row.sixes}\n                              </StyledTableCell>\n                            </StyledTableRow>\n                          ))}\n                        </TableBody>\n\n                        <TableHead>\n                          <TableRow>\n                            <StyledTableCell>BOWLING</StyledTableCell>\n                            <StyledTableCell align=\"right\">O</StyledTableCell>\n                            <StyledTableCell align=\"right\">M</StyledTableCell>\n                            <StyledTableCell align=\"right\">R</StyledTableCell>\n                            <StyledTableCell align=\"right\">W</StyledTableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {firstBowlingList.map(row =>\n                            row.name !== \"wicket\" ? (\n                              <StyledTableRow key={row.name}>\n                                <StyledTableCell component=\"th\" scope=\"row\">\n                                  {row.name}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                  {row.o}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                  {row.m}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                  {row.r}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                  {row.w}\n                                </StyledTableCell>\n                              </StyledTableRow>\n                            ) : null\n                          )}\n                        </TableBody>\n                      </Table>\n                    </Paper>\n                  </TabPanel>\n                  <TabPanel value={value} index={1} dir={theme.direction}>\n                    <Paper className={classes.root}>\n                      <Table\n                        className={classes.table}\n                        aria-label=\"customized table\"\n                      >\n                        <TableHead>\n                          <TableRow>\n                            <StyledTableCell>BATTING</StyledTableCell>\n                            <StyledTableCell align=\"right\">R</StyledTableCell>\n                            <StyledTableCell align=\"right\">B</StyledTableCell>\n                            <StyledTableCell align=\"right\">4s</StyledTableCell>\n                            <StyledTableCell align=\"right\">6s</StyledTableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {secondBattingList.map(row => (\n                            <StyledTableRow key={row.batsman}>\n                              <StyledTableCell component=\"th\" scope=\"row\">\n                                {row.batsman}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">\n                                {row.runs}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">\n                                {row.balls}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">\n                                {row.fours}\n                              </StyledTableCell>\n                              <StyledTableCell align=\"right\">\n                                {row.sixes}\n                              </StyledTableCell>\n                            </StyledTableRow>\n                          ))}\n                        </TableBody>\n\n                        <TableHead>\n                          <TableRow>\n                            <StyledTableCell>BOWLING</StyledTableCell>\n                            <StyledTableCell align=\"right\">O</StyledTableCell>\n                            <StyledTableCell align=\"right\">M</StyledTableCell>\n                            <StyledTableCell align=\"right\">R</StyledTableCell>\n                            <StyledTableCell align=\"right\">W</StyledTableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {secondBowlingList.map(row =>\n                            row.name !== \"wicket\" ? (\n                              <StyledTableRow key={row.name}>\n                                <StyledTableCell component=\"th\" scope=\"row\">\n                                  {row.name}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                  {row.o}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                  {row.m}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                  {row.r}\n                                </StyledTableCell>\n                                <StyledTableCell align=\"right\">\n                                  {row.w}\n                                </StyledTableCell>\n                              </StyledTableRow>\n                            ) : null\n                          )}\n                        </TableBody>\n                      </Table>\n                    </Paper>\n                  </TabPanel>\n                </SwipeableViews>\n              </div>\n            </Grid>\n          </div>\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}